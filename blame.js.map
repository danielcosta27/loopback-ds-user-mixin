{"version":3,"sources":["blame.js"],"names":["debug","warn","options","message","silenceWarnings","console","Model","bootOptions","modelName","createdBy","updatedBy","required","validateUpsert","type","settings","pluralModelName","defineProperty","observe","ctx","next","token","accessToken","userId","skipUpdatedBy","instance","isNewInstance","data","module","exports","default"],"mappings":";;;;;;;;AAAA;;;;;;AAEA,IAAMA,QAAQ,sBAAd;AACA,IAAMC,OAAO,SAAPA,IAAO,CAACC,OAAD,EAAUC,OAAV,EAAsB;AAC/B,QAAI,CAACD,QAAQE,eAAb,EAA8B;AAC1BC,gBAAQJ,IAAR,CAAaE,OAAb;AACH;AACJ,CAJD;;kBAMe,UAACG,KAAD,EAA6B;AAAA,QAArBC,WAAqB,uEAAP,EAAO;;AACxCP,UAAM,yBAAN,EAAiCM,MAAME,SAAvC;;AAEA,QAAMN,UAAU,SAAc;AAC1BO,mBAAW,WADe;AAE1BC,mBAAW,WAFe;AAG1BC,kBAAU,KAHgB;AAI1BC,wBAAgB,KAJU,EAIH;AACvBR,yBAAiB,KALS;AAM1BS,cAAM;AANoB,KAAd,EAObN,WAPa,CAAhB;;AASAP,UAAM,SAAN,EAAiBE,OAAjB;;AAEA,QAAI,CAACA,QAAQU,cAAT,IAA2BN,MAAMQ,QAAN,CAAeF,cAA9C,EAA8D;AAC1DN,cAAMQ,QAAN,CAAeF,cAAf,GAAgC,KAAhC;AACAX,aAAKC,OAAL,EAAiBI,MAAMS,eAAvB;AACH;;AAED,QAAIT,MAAMQ,QAAN,CAAeF,cAAf,IAAiCV,QAAQS,QAA7C,EAAuD;AACnDV,aAAKC,OAAL,mBAA6BI,MAAMS,eAAnC;AAEH;;AAED;AACA,QAAMF,OAAOX,QAAQW,IAArB;;AAEAP,UAAMU,cAAN,CAAqBd,QAAQO,SAA7B,EAAwC;AACpCI,cAAMA,IAD8B;AAEpCF,kBAAUT,QAAQS;AAFkB,KAAxC;;AAKAL,UAAMU,cAAN,CAAqBd,QAAQQ,SAA7B,EAAwC;AACpCG,cAAMA,IAD8B;AAEpCF,kBAAUT,QAAQS;AAFkB,KAAxC;;AAKAL,UAAMW,OAAN,CAAc,aAAd,EAA6B,UAACC,GAAD,EAAMC,IAAN,EAAe;AACxCnB,cAAM,aAAN,EAAqBkB,IAAIhB,OAAzB;AACA,YAAMkB,QAAQF,IAAIhB,OAAJ,IAAegB,IAAIhB,OAAJ,CAAYmB,WAAzC;AACA,YAAMC,SAASF,SAASA,MAAME,MAA9B;;AAEA,YAAIJ,IAAIhB,OAAJ,IAAegB,IAAIhB,OAAJ,CAAYqB,aAA/B,EAA8C;AAAE,mBAAOJ,MAAP;AAAgB;;AAEhE,YAAI,CAACG,MAAL,EAAa;AAAE,mBAAOH,MAAP;AAAgB;;AAE/B,YAAID,IAAIM,QAAR,EAAkB;AACd,gBAAIN,IAAIO,aAAR,EAAuB;AACnB;AACAP,oBAAIM,QAAJ,CAAatB,QAAQO,SAArB,IAAkCa,MAAlC;AACH;AACDJ,gBAAIM,QAAJ,CAAatB,QAAQQ,SAArB,IAAkCY,MAAlC;AACH,SAND,MAMO;AACHJ,gBAAIQ,IAAJ,CAASxB,QAAQQ,SAAjB,IAA8BY,MAA9B;AACH;AACD,eAAOH,MAAP;AACH,KAnBD;AAoBH,C;;AAEDQ,OAAOC,OAAP,GAAiBA,QAAQC,OAAzB","file":"blame.js","sourcesContent":["import _debug from 'debug';\n\nconst debug = _debug();\nconst warn = (options, message) => {\n    if (!options.silenceWarnings) {\n        console.warn(message);\n    }\n};\n\nexport default (Model, bootOptions = {}) => {\n    debug('User mixin for Model %s', Model.modelName);\n\n    const options = Object.assign({\n        createdBy: 'createdBy',\n        updatedBy: 'updatedBy',\n        required: false,\n        validateUpsert: false, // default to turning validation off\n        silenceWarnings: false,\n        type: 'string'\n    }, bootOptions);\n\n    debug('options', options);\n\n    if (!options.validateUpsert && Model.settings.validateUpsert) {\n        Model.settings.validateUpsert = false;\n        warn(options, `${Model.pluralModelName} settings.validateUpsert was overriden to false`);\n    }\n\n    if (Model.settings.validateUpsert && options.required) {\n        warn(options, `Upserts for ${Model.pluralModelName} will fail when\n          validation is turned on and time stamps are required`);\n    }\n\n    //const type = !options.dsName ? 'string' : Model.app.datasources[options.dsName].connector.getDefaultIdType();\n    const type = options.type;\n\n    Model.defineProperty(options.createdBy, {\n        type: type,\n        required: options.required\n    });\n\n    Model.defineProperty(options.updatedBy, {\n        type: type,\n        required: options.required\n    });\n\n    Model.observe('before save', (ctx, next) => {\n        debug('ctx.options', ctx.options);\n        const token = ctx.options && ctx.options.accessToken;\n        const userId = token && token.userId;\n\n        if (ctx.options && ctx.options.skipUpdatedBy) { return next(); }\n\n        if (!userId) { return next(); }\n\n        if (ctx.instance) {\n            if (ctx.isNewInstance) {\n                // FIXME: check for support of ctx.isNewInstance\n                ctx.instance[options.createdBy] = userId;\n            }\n            ctx.instance[options.updatedBy] = userId;\n        } else {\n            ctx.data[options.updatedBy] = userId;\n        }\n        return next();\n    });\n};\n\nmodule.exports = exports.default;\n"],"sourceRoot":"/Users/daniel/fontes/temp/loopback-ds-user-mixin/es6"}